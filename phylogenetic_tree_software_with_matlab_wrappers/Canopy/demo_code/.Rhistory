getwd()
setwd("/home/surjray/Downloads/Canopy-master/demo_code")
getwd()
source("canopy_demo_toy_test.R")
toy
source("canopy_demo_toy_test.R")
source("canopy_demo_toy_test.R")
source("canopy_demo_toy_test.R")
WM <- matrix(, nrow = 0, ncol = 0)
Wm <- matrix(, nrow = 0, ncol = 0)
source("canopy_demo_toy_test.R")
source("canopy_demo_toy.R")
toy
WM
Wm
typeof(WM)
nrow(WM)
ncol(WM)
WM <- matrix(, nrow = 3, ncol = 3)
Wm <- matrix(, nrow = 3, ncol = 3)
WM
Wm
toy$R
toy$X
source("canopy_demo_toy_test.R")
WM = zeros(3,3)
WM <- matrix(0, nrow = 3, ncol = 3)
Wm <- matrix(0, nrow = 3, ncol = 3)
WM
Wm
source("canopy_demo_toy_test.R")
toy
toy$WM
toy$Wm
toy$Wm <- 0
toy$WM <- 0
toy$WM
toy$Wm <- 0
toy$Wm
source("canopy_demo_toy_test.R")
toy
R
X
WM
Wm
rownames(WM)
colnames(WM)
rownames(WM) <- c("cna1", "cna2", "cna3")
colnames(WM) <- c("sample1", "sample2", "sample3")
WM
rownames(Wm) <- c("cna1", "cna2", "cna3")
colnames(Wm) <- c("sample1", "sample2", "sample3")
X
R
WM
Wm
source("canopy_demo_toy_test.R")
toy$Y
Y = toy$Y
Y
Y(0,0)
Y[0,0]
Y
Y[,1]
Y[1,]
Y[,1] <- 1
Y
y[,-1] <- 0
Y[,-1] <- 0
Y
source("canopy_demo_toy_test.R")
Y
source("canopy_demo_toy_test.R")
WM
toy
K
source("canopy_demo_toy_test.R")
history
history()
history()
K
epsilonM
epsilonm
typeof(epsilonM)
typeof(epsilonm)
epsilonM <- 0
epsilonm <- 0
typeof(epsilonm)
typeof(epsilonM)
epsilonM
epsilonm
K
source("canopy_demo_toy_test.R")
epsilonM = toy$epsilonM
epsilonm = toy$epsilonm
epsilonM
epsilonm
source("canopy_demo_toy_test.R")
source("canopy_demo_toy_test.R")
K
R
X
rownames(X)
Y
getwd()
list.files(path = ".")
test = read.delim("sim_9.input", header = FALSE, sep = "\t", quote = "", dec = ".", fill = TRUE, comment.char = "")
test
test_first_row = test[1,]
test_first_row
test_first_column = test[,1]
test_first_column
test_read_counts = test[-1,-1]
test_read_counts
nrow(test_read_counts)
ncol(test_read_counts)
test_read_counts_left = test_read_counts[, seq(1, ncol(test_read_counts), 2)]
test_read_counts_right = test_read_counts[, seq(2, ncol(test_read_counts), 2)]
test_read_counts_left
test_read_counts_right
R = test_read_counts_right
R
test_read_counts_sum = test_read_counts_left + test_read_counts_right
X = test_read_counts_sum
X
nrow(X)
ncol(X)
row_features <- c(sprintf("sna%d", seq(1, nrow(X))))
row_features
rownames(X) <- row_features
col_features <- c(sprintf("sample%d", seq(1, ncol(X))))
colnames(X) <- col_features
X
rownames(R) <- row_features
colnames(R) <- col_features
R
X_num_rows = nrow(test_read_counts_sum)
X_num_col = ncol(test_read_counts_sum)
X_num_rows
X_num_col
Y_num_rows = X_num_rows
Y_num_col = X_num_col + 1
Y_num_rows
Y_num_col
Y <- matrix(0, nrow = Y_num_rows, ncol = Y_num_col)
Y[,1] = 1
rownames(Y) <- row_features
col_features <- c(sprintf("sample%d", seq(0, ncol(test_read_counts_right))))
colnames(Y) <- col_features
col_features <- c(sprintf("cna%d", seq(0, ncol(test_read_counts_right))))
colnames(Y) <- col_features
colnames(Y)[1] <- "non-cna"
Y
WM
Wm
X_num_rows
X_num_col
WM <- matrix(0, X_num_rows, X_num_col)
row_features <- c(sprintf("cna%d", seq(1, nrow(X))))
rownames(WM) <- row_features
col_features <- c(sprintf("sample%d", seq(0, ncol(test_read_counts_right))))
colnames(WM) <- col_features
WM
col_features <- c(sprintf("sample%d", seq(0, ncol(X))))
colnames(WM) <- col_features
ncol(X)
Wm
col_features <- c(sprintf("sample%d", seq(1, ncol(X))))
colnames(WM) <- col_features
WM
R
X
Y
WM
Wm
WM <- matrix(0, X_num_rows, X_num_col)
row_features <- c(sprintf("cna%d", seq(1, nrow(X))))
rownames(Wm) <- row_features
WM
WM <- matrix(0, X_num_rows, X_num_col)
row_features <- c(sprintf("cna%d", seq(1, nrow(X))))
rownames(WM) <- row_features
col_features <- c(sprintf("sample%d", seq(1, ncol(X))))
colnames(WM) <- col_features
WM
Wm <- matrix(0, X_num_rows, X_num_col)
rownames(WM) <- row_features
colnames(WM) <- col_features
rownames(Wm) <- row_features
colnames(Wm) <- col_features
WM
Wm
source("canopy_demo_toy_test.R")
Y
data(toy)
Y
Y
TOY$Y
toy$Y
toy$X
WM
Y
Y_num_col = X_num_rows + 1
Y <- matrix(0, nrow = Y_num_rows, ncol = Y_num_col)
Y
Y[,1] = 1
rownames(Y) <- row_features
col_features <- c(sprintf("cna%d", seq(0, ncol(Y))))
colnames(Y) <- col_features
ncol(Y)
col_features
col_features <- c(sprintf("cna%d", seq(0, ncol(Y)-1)))
colnames(Y) <- col_features
Y
colnames(Y)[1] <- "non-cna"
source("canopy_demo_toy_test.R")
nrow(X)
ncol(X)
X
getwd()
savehistory()
savehistory(file = ".Rhistory"))
savehistory(file = ".Rhistory")
